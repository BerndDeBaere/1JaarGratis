// <auto-generated />
using EenJaarGratis.Service.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassLibrary1EenJaarGratis.Service.Storage.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("EenJaarGratis.Service.Storage.Domain.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("EenJaarGratis.Service.Storage.Domain.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Answer1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Answer3")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CorrectAnswer")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PointsToShare")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(100);

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("EenJaarGratis.Service.Storage.Domain.QuestionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionGroups");
                });

            modelBuilder.Entity("PlayerQuestionGroup", b =>
                {
                    b.Property<int>("PlayersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestionGroupsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayersId", "QuestionGroupsId");

                    b.HasIndex("QuestionGroupsId");

                    b.ToTable("PlayerQuestionGroup");
                });

            modelBuilder.Entity("EenJaarGratis.Service.Storage.Domain.QuestionGroup", b =>
                {
                    b.HasOne("EenJaarGratis.Service.Storage.Domain.Question", "Question")
                        .WithMany("QuestionGroups")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("PlayerQuestionGroup", b =>
                {
                    b.HasOne("EenJaarGratis.Service.Storage.Domain.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EenJaarGratis.Service.Storage.Domain.QuestionGroup", null)
                        .WithMany()
                        .HasForeignKey("QuestionGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EenJaarGratis.Service.Storage.Domain.Question", b =>
                {
                    b.Navigation("QuestionGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
